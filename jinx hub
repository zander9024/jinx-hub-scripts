local success, RayfieldLib = pcall(function()
    return loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

if not success or not RayfieldLib then
    warn("Rayfield failed to load. Check URL or executor support.")
    return
end

local Rayfield = RayfieldLib

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

--// Wait for character
repeat task.wait() until player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart")

local character = player.Character
local humanoid = character:FindFirstChild("Humanoid")
local hrp = character:FindFirstChild("HumanoidRootPart")

--// Create Main UI Window
local Window = Rayfield:CreateWindow({
    Name = "Jinx Hub",
    LoadingTitle = "Loading Jinx Hub UI...",
    LoadingSubtitle = "by jinx",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

--// Create Universal Tab
local UniversalTab = Window:CreateTab("Universal", 4483362458)

--// WalkSpeed Slider
UniversalTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Callback = function(Value)
        humanoid.WalkSpeed = Value
    end,
})

--// JumpPower Slider
UniversalTab:CreateSlider({
    Name = "Jump Height",
    Range = {50, 200},
    Increment = 5,
    Suffix = "Power",
    CurrentValue = 50,
    Callback = function(Value)
        humanoid.UseJumpPower = true
        humanoid.JumpPower = Value
    end,
})

--// No Clip Toggle
local noclip = false

UniversalTab:CreateToggle({
    Name = "No Clip",
    CurrentValue = false,
    Callback = function(Value)
        noclip = Value
    end
})

RunService.Stepped:Connect(function()
    if noclip and character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

--// Fly Toggle
local flying = false
local flyConnection
local flySpeed = 100

UniversalTab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Callback = function(Value)
        flying = Value

        if flying then
            local bv = Instance.new("BodyVelocity")
            local bg = Instance.new("BodyGyro")

            bv.Name = "FlyVelocity"
            bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
            bv.Velocity = Vector3.zero
            bv.P = 1250
            bv.Parent = hrp

            bg.Name = "FlyGyro"
            bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
            bg.P = 3000
            bg.CFrame = workspace.CurrentCamera.CFrame
            bg.Parent = hrp

            flyConnection
